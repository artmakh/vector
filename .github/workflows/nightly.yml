name: Nightly

on:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"

env:
  AUTOINSTALL: true
  CHANNEL: nightly
  VERBOSE: true
  CI: true
  DEBIAN_FRONTEND: noninteractive
  RUSTFLAGS: "-D warnings"

jobs:
  build-x86_64-unknown-linux-gnu-packages:
    runs-on: [linux, release-builder]
    steps:
      - uses: colpal/actions-clean@v1
      - uses: actions/checkout@v3
      - run: sudo -E bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: echo VECTOR_VERSION=$(make version) >> $GITHUB_ENV
      - run: bash scripts/set-build-description.sh
      - env:
          PASS_FEATURES: "default"
        run: make package-x86_64-unknown-linux-gnu-all
      - uses: actions/upload-artifact@v3
        with:
          name: vector-${{ env.VECTOR_VERSION }}-x86_64-unknown-linux-gnu.tar.gz
          path: "./target/artifacts/vector-${{ env.VECTOR_VERSION }}-x86_64-unknown-linux-gnu.tar.gz"
      - uses: actions/upload-artifact@v3
        with:
          name: vector_${{ env.VECTOR_VERSION }}-1_amd64.deb
          path: "./target/artifacts/vector_${{ env.VECTOR_VERSION }}-1_amd64.deb"
      - uses: actions/upload-artifact@v3
        with:
          name: vector-${{ env.VECTOR_VERSION }}-1.x86_64.rpm
          path: "./target/artifacts/vector-${{ env.VECTOR_VERSION }}-1.x86_64.rpm"

  build-aarch64-unknown-linux-gnu-packages:
    runs-on: [linux, release-builder]
    steps:
      - uses: colpal/actions-clean@v1
      - uses: actions/checkout@v3
      - run: sudo -E bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: echo VECTOR_VERSION=$(make version) >> $GITHUB_ENV
      - run: bash scripts/set-build-description.sh
      - env:
          DOCKER_PRIVILEGED: "true"
          PASS_FEATURES: "default"
        run: make package-aarch64-unknown-linux-gnu-all
      - uses: actions/upload-artifact@v3
        with:
          name: vector-${{ env.VECTOR_VERSION }}-aarch64-unknown-linux-gnu.tar.gz
          path: "./target/artifacts/vector-${{ env.VECTOR_VERSION }}-aarch64-unknown-linux-gnu.tar.gz"
      - uses: actions/upload-artifact@v3
        with:
          name: vector_${{ env.VECTOR_VERSION }}-1_arm64.deb
          path: "./target/artifacts/vector_${{ env.VECTOR_VERSION }}-1_arm64.deb"
      - uses: actions/upload-artifact@v3
        with:
          name: vector-${{ env.VECTOR_VERSION }}-1.aarch64.rpm
          path: "./target/artifacts/vector-${{ env.VECTOR_VERSION }}-1.aarch64.rpm"

  build-armv7-unknown-linux-gnueabihf-packages:
    runs-on: [linux, release-builder]
    steps:
      - uses: colpal/actions-clean@v1
      - uses: actions/checkout@v3
      - run: sudo -E bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: echo VECTOR_VERSION=$(make version) >> $GITHUB_ENV
      - run: bash scripts/set-build-description.sh
      - env:
          DOCKER_PRIVILEGED: "true"
        run: make package-armv7-unknown-linux-gnueabihf-all
      - uses: actions/upload-artifact@v3
        with:
          name: vector-${{ env.VECTOR_VERSION }}-armv7-unknown-linux-gnueabihf.tar.gz
          path: "./target/artifacts/vector-${{ env.VECTOR_VERSION }}-armv7-unknown-linux-gnueabihf.tar.gz"
      - uses: actions/upload-artifact@v3
        with:
          name: vector_${{ env.VECTOR_VERSION }}-1_armhf.deb
          path: "./target/artifacts/vector_${{ env.VECTOR_VERSION }}-1_armhf.deb"
      - uses: actions/upload-artifact@v3
        with:
          name: vector-${{ env.VECTOR_VERSION }}-1.armv7.rpm
          path: "./target/artifacts/vector-${{ env.VECTOR_VERSION }}-1.armv7.rpm"

  deb-verify:
    needs:
      - build-x86_64-unknown-linux-gnu-packages
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        container: ["ubuntu:14.04","ubuntu:16.04","ubuntu:18.04","ubuntu:20.04","debian:9","debian:10","debian:11"]
    container:
      image: ${{ matrix.container }}
    steps:
      - run: |
          apt-get update && \
          apt-get install -y \
          ca-certificates \
          curl \
          git \
          systemd \
          make
        # https://github.com/actions/checkout/issues/760
      - name: work around permission issue
        run: git config --global --add safe.directory /__w/vector/vector
      - name: checkout
        uses: actions/checkout@v3
      - run: echo VECTOR_VERSION=$(make version) >> $GITHUB_ENV
      - uses: actions/download-artifact@v3
        with:
          name: vector_${{ env.VECTOR_VERSION }}-1_amd64.deb
          path: target/artifacts
      - name: First install of DEB package.
        run: |
          dpkg -i target/artifacts/vector_${{ env.VECTOR_VERSION }}-1_amd64.deb
          ./scripts/verify-install.sh
      - name: Second install of DEB package.
        run: |
          dpkg -i target/artifacts/vector_${{ env.VECTOR_VERSION }}-1_amd64.deb
          ./scripts/verify-install.sh

  release-docker:
    runs-on: ubuntu-18.04
    needs:
      - build-aarch64-unknown-linux-gnu-packages
      - build-x86_64-unknown-linux-gnu-packages
      - build-armv7-unknown-linux-gnueabihf-packages
      - deb-verify
    steps:
      - uses: actions/checkout@v3
      - run: echo VECTOR_VERSION=$(make version) >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.CI_DOCKER_USERNAME }}
          password: ${{ secrets.CI_DOCKER_PASSWORD }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.0.0
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.0.0
        with:
          version: latest
          install: true
      - uses: actions/download-artifact@v3
        with:
          name: vector-${{ env.VECTOR_VERSION }}-x86_64-unknown-linux-musl.tar.gz
          path: target/artifacts
      - uses: actions/download-artifact@v3
        with:
          name: vector-${{ env.VECTOR_VERSION }}-aarch64-unknown-linux-musl.tar.gz
          path: target/artifacts
      - uses: actions/download-artifact@v3
        with:
          name: vector-${{ env.VECTOR_VERSION }}-armv7-unknown-linux-musleabihf.tar.gz
          path: target/artifacts
      - uses: actions/download-artifact@v3
        with:
          name: vector_${{ env.VECTOR_VERSION }}-1_amd64.deb
          path: target/artifacts
      - uses: actions/download-artifact@v3
        with:
          name: vector_${{ env.VECTOR_VERSION }}-1_arm64.deb
          path: target/artifacts
      - uses: actions/download-artifact@v3
        with:
          name: vector_${{ env.VECTOR_VERSION }}-1_armhf.deb
          path: target/artifacts
      - env:
          PLATFORM: "linux/amd64,linux/arm64,linux/arm/v7"
        run: |
          make release-docker
